import copy
import random
# Consider using the modules imported above.


class Hat:
    def __init__(self, **kwargs):
        self.kwargs = kwargs
        self.contents = list()
        values = list(kwargs.values())
        keys = list(kwargs.keys())
        for num in values:
            key_index = values.index(num)
            for x in range(num):
                self.contents.append(keys[key_index])

    def draw(self, num_balls_drawn):
        selection = list()
        draw_list = list(range(num_balls_drawn))
        if num_balls_drawn > len(self.contents):
            return self.contents
        else:
            for x in draw_list:
                drawn = random.choice(self.contents)
                self.contents.remove(drawn)
                selection.append(drawn)
        return selection


def experiment(hat, expected_balls, num_balls_drawn, num_experiments):
    count = 0
    for x in range(num_experiments):
        expected_copy = copy.deepcopy(expected_balls)
        hat_copy = copy.deepcopy(hat)
        colors = hat_copy.draw(num_balls_drawn)

        for color in colors:
            if color in expected_copy:
                expected_copy[color] -= 1
            if all(x <= 0 for x in expected_copy.values()):
                count += 1

    return count / num_experiments
